package me.friendly.exeter.module.impl.exploits;

import me.friendly.api.event.Event;
import me.friendly.api.event.Listener;
import me.friendly.exeter.events.TickEvent;
import me.friendly.exeter.module.ModuleType;
import me.friendly.exeter.module.ToggleableModule;
import me.friendly.exeter.properties.NumberProperty;
import me.friendly.exeter.properties.Property;
import net.minecraft.item.ItemBow;
import net.minecraft.item.ItemFood;
import net.minecraft.item.ItemPotion;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.CPacketPlayer;

public class PacketUse extends ToggleableModule {
    private final Property<Boolean> consumables = new Property<>(true, "Consumables", "food", "potions", "potion");
    private final Property<Boolean> bows = new Property<>(false, "Bows", "bowandarrow");

    private final NumberProperty<Integer> ticks = new NumberProperty<>(10, 0, 20, "Ticks", "usecount");
    private final NumberProperty<Integer> packets = new NumberProperty<>(20, 1, 100, "Packets", "ground", "spoofs");

    public PacketUse() {
        super("Packet Use", new String[]{"packetuse", "packeteat"}, ModuleType.EXPLOITS);
        offerProperties(consumables, bows, ticks, packets);

        listeners.add(new Listener<TickEvent>("packetuse_tick_listener") {
            @Override
            public void call(TickEvent event) {
                ItemStack activeHand = mc.player.getActiveItemStack();
                int useCount = mc.player.getItemInUseMaxCount();

                if ((activeHand.getItem() instanceof ItemFood && consumables.getValue())
                        || (activeHand.getItem() instanceof ItemPotion && consumables.getValue())) {

                    if (useCount >= ticks.getValue()) {
                        for (int i = 0; i < packets.getValue(); ++i) {
                            mc.player.connection.sendPacket(new CPacketPlayer(true));
                        }

                        // mc.player.stopActiveHand();
                    }

                } else if (activeHand.getItem() instanceof ItemBow && bows.getValue()) {
                    // TODO
                }
            }
        });
    }
}
